// <auto-generated />
using System;
using EFStore.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFStore.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220513100607_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFStore.Models.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("043074b5-16ec-4112-b2e9-331ad5ad1f83"),
                            Name = "Cat1"
                        },
                        new
                        {
                            Id = new Guid("3408896e-2c5c-4285-899b-3d760002ccfa"),
                            Name = "Cat2"
                        },
                        new
                        {
                            Id = new Guid("76ddb584-af5e-4b9e-9498-01295496fdd2"),
                            Name = "Cat3"
                        });
                });

            modelBuilder.Entity("EFStore.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f14e8e7-3900-43a4-980b-6d46e9a301a5"),
                            Manufacture = "M1",
                            Name = "Pro1"
                        },
                        new
                        {
                            Id = new Guid("a4ca47bb-1b48-4eed-ad30-4a41352d4834"),
                            Manufacture = "M2",
                            Name = "Pro2"
                        },
                        new
                        {
                            Id = new Guid("98971972-7b24-4c7c-807f-78414bf5e52f"),
                            Manufacture = "M3",
                            Name = "Pro3"
                        });
                });

            modelBuilder.Entity("EFStore.Models.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("1f14e8e7-3900-43a4-980b-6d46e9a301a5"),
                            CategoryId = new Guid("76ddb584-af5e-4b9e-9498-01295496fdd2")
                        },
                        new
                        {
                            ProductId = new Guid("a4ca47bb-1b48-4eed-ad30-4a41352d4834"),
                            CategoryId = new Guid("043074b5-16ec-4112-b2e9-331ad5ad1f83")
                        },
                        new
                        {
                            ProductId = new Guid("98971972-7b24-4c7c-807f-78414bf5e52f"),
                            CategoryId = new Guid("3408896e-2c5c-4285-899b-3d760002ccfa")
                        });
                });

            modelBuilder.Entity("EFStore.Models.Entities.ProductCategory", b =>
                {
                    b.HasOne("EFStore.Models.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFStore.Models.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EFStore.Models.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("EFStore.Models.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
